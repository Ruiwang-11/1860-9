CHIP P2S {
    IN indata[4], enable, load;
    OUT sout, complete;

    PARTS:
    // 使用4个1位寄存器组成4位寄存器组
    DFF(in=indata[0], load=load, out=reg0);
    DFF(in=indata[1], load=load, out=reg1);
    DFF(in=indata[2], load=load, out=reg2);
    DFF(in=indata[3], load=load, out=reg3);

    // 组合当前存储的4位数据
    Or4Way(a=reg0, b=reg1, c=reg2, d=reg3, out[0]=stored0, out[1]=stored1, out[2]=stored2, out[3]=stored3);

    // 2位计数器（使用内置16位计数器并截取低2位）
    Inc16(in=count, out=count_inc);
    Mux16(a=count, b=count_inc, sel=enable, out=next_count);
    Register(in=next_count, load=enable, out=count);
    // 提取低2位作为实际计数值（0-3）
    Splitter(in=count, out[0]=cnt0, out[1]=cnt1);
    Or(a=cnt0, b=cnt1, out=count_valid);

    // 多路选择器选择当前输出位（手动实现4选1逻辑）
    Mux(a=stored0, b=stored1, sel=cnt0, out=mux1_out);
    Mux(a=stored2, b=stored3, sel=cnt0, out=mux2_out);
    Mux(a=mux1_out, b=mux2_out, sel=cnt1, out=sout);

    // 完成信号逻辑（当计数器达到3时置位）
    And(a=cnt0, b=cnt1, out=complete_temp);
    And(a=complete_temp, b=enable, out=complete);
}